{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"liwcalike(df$text, dictionary = data_dictionary_MFD)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"liwcalike.character(df$text, dictionary = data_dictionary_MFD)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"quanteda::tokens(x, remove_hyphens = TRUE, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tokens.character(x, remove_hyphens = TRUE, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tokens.corpus(corpus(x), what = what, remove_punct = remove_punct, \n    remove_symbols = remove_symbols, remove_numbers = remove_numbers, \n    remove_url = remove_url, remove_separators = remove_separators, \n    split_hyphens = split_hyphens, include_docvars = include_docvars,  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"lapply(x, function(y) {\n    if (verbose) \n        catm(\" ...\", head(names(y), 1), \" to \", tail(names(y), \n            1), \"\\n\", sep = \"\") ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"serialize_tokens(tokenizer_fn(y, split_hyphens = split_hyphens, \n    verbose = verbose))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"lapply(x, function(x) {\n    id <- fastmatch::fmatch(x, types)\n    is_na <- is.na(id)\n    if (length(is_na) > 0) { ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"fastmatch::fmatch","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"getExportedValue(pkg, name)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"asNamespace(ns)","line_number":0}],"message":"aucune boucle d'oÃ¹ sortir (break/next) ; saut vers le niveau le plus haut"}